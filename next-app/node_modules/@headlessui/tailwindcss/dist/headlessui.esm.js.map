{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import plugin from 'tailwindcss/plugin'\n\ninterface Options {\n  /**\n   * The prefix used for the variants. This defaults to `ui`.\n   *\n   * Usage example:\n   * ```html\n   *  <div class=\"ui-open:underline\"></div>\n   *  ```\n   **/\n  prefix?: string\n}\n\nexport default plugin.withOptions<Options>(({ prefix = 'ui' } = {}) => {\n  return ({ addVariant }) => {\n    for (let state of ['open', 'checked', 'selected', 'active', 'disabled']) {\n      // TODO: Once `:has()` is properly supported, then we can switch to this version:\n      // addVariant(`${prefix}-${state}`, [\n      //   `&[data-headlessui-state~=\"${state}\"]`,\n      //   `:where([data-headlessui-state~=\"${state}\"]):not(:has([data-headlessui-state])) &`,\n      // ])\n\n      // But for now, this will do:\n      addVariant(`${prefix}-${state}`, [\n        `&[data-headlessui-state~=\"${state}\"]`,\n        `:where([data-headlessui-state~=\"${state}\"]) &`,\n      ])\n\n      addVariant(`${prefix}-not-${state}`, [\n        `&[data-headlessui-state]:not([data-headlessui-state~=\"${state}\"])`,\n        `:where([data-headlessui-state]:not([data-headlessui-state~=\"${state}\"])) &:not([data-headlessui-state])`,\n      ])\n    }\n  }\n})\n"],
  "mappings": ";AAAA;AAcA,IAAO,cAAQ,OAAO,YAAqB,CAAC,EAAE,SAAS,SAAS,CAAC,MAAM;AACrE,SAAO,CAAC,EAAE,iBAAiB;AACzB,aAAS,SAAS,CAAC,QAAQ,WAAW,YAAY,UAAU,UAAU,GAAG;AAQvE,iBAAW,GAAG,UAAU,SAAS;AAAA,QAC/B,6BAA6B;AAAA,QAC7B,mCAAmC;AAAA,MACrC,CAAC;AAED,iBAAW,GAAG,cAAc,SAAS;AAAA,QACnC,yDAAyD;AAAA,QACzD,+DAA+D;AAAA,MACjE,CAAC;AAAA,IACH;AAAA,EACF;AACF,CAAC;",
  "names": []
}
